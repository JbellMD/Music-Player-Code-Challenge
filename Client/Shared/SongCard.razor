@using music_manager_starter.Shared

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Song.Title</MudText>
            <MudText Typo="Typo.body2">@Song.Artist</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                <MudMenuItem OnClick="@(() => OnEdit.InvokeAsync(Song))">Edit</MudMenuItem>
                <MudMenuItem OnClick="@(() => OnDelete.InvokeAsync(Song))">Delete</MudMenuItem>
                <MudMenuItem OnClick="@(() => OnAddToPlaylist.InvokeAsync(Song))">Add to Playlist</MudMenuItem>
            </MudMenu>
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardMedia Image="@(string.IsNullOrEmpty(Song.AlbumArtUrl) ? "/images/default-album.png" : Song.AlbumArtUrl)" 
                  Height="200" />
    <MudCardContent>
        <MudText Typo="Typo.body2">Album: @Song.Album</MudText>
        <MudText Typo="Typo.body2">Genre: @Song.Genre</MudText>
        <MudText Typo="Typo.body2">Duration: @Song.Duration minutes</MudText>
        <MudText Typo="Typo.body2">Release Date: @(Song.ReleaseDate.ToString("d"))</MudText>
        <MudRating @bind-Value="Song.Rating" ReadOnly="true" />
    </MudCardContent>
    <MudCardActions>
        <MudButton OnClick="@(() => OnPlay.InvokeAsync(Song))" 
                   Color="Color.Primary" 
                   Variant="Variant.Text">
            Play
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public Song Song { get; set; } = default!;

    [Parameter]
    public EventCallback<Song> OnPlay { get; set; }

    [Parameter]
    public EventCallback<Song> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Song> OnDelete { get; set; }

    [Parameter]
    public EventCallback<Song> OnAddToPlaylist { get; set; }
}
