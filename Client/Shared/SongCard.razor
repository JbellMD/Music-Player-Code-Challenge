@using music_manager_starter.Shared

<MudCard>
    <MudCardMedia Image="@(string.IsNullOrEmpty(Song.AlbumArtUrl) ? "/images/default-album.png" : Song.AlbumArtUrl)" 
                  Height="200" />
    <MudCardContent>
        <MudText Typo="Typo.h6">@Song.Title</MudText>
        <MudText Typo="Typo.body2">Artist: @Song.Artist</MudText>
        <MudText Typo="Typo.body2">Album: @Song.Album</MudText>
        <MudText Typo="Typo.body2">Genre: @Song.Genre</MudText>
        <MudText Typo="Typo.body2">Duration: @Song.Duration minutes</MudText>
        <MudText Typo="Typo.body2">Release Date: @(Song.ReleaseDate.ToString("d"))</MudText>
        <MudText Typo="Typo.body2">Rating: @(Song.AverageRating.GetValueOrDefault(0).ToString("F1"))</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton OnClick="@(() => OnPlay.InvokeAsync(Song))" 
                   Color="Color.Primary" 
                   Variant="Variant.Text">
            Play
        </MudButton>
        <MudButton OnClick="@(() => OnEdit.InvokeAsync(Song))" Color="Color.Primary">Edit</MudButton>
        <MudButton OnClick="@(() => OnDelete.InvokeAsync(Song))" Color="Color.Error">Delete</MudButton>
        <MudButton OnClick="@(() => OnAddToPlaylist.InvokeAsync(Song))" Color="Color.Secondary">Add to Playlist</MudButton>
        <MudMenu Icon="@Icons.Material.Filled.MoreVert">
            <MudMenuItem OnClick="@(() => OnEdit.InvokeAsync(Song))">Edit</MudMenuItem>
            <MudMenuItem OnClick="@(() => OnDelete.InvokeAsync(Song))">Delete</MudMenuItem>
        </MudMenu>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public Song Song { get; set; } = null!;

    [Parameter]
    public EventCallback<Song> OnPlay { get; set; }

    [Parameter]
    public EventCallback<Song> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Song> OnDelete { get; set; }

    [Parameter]
    public EventCallback<Song> OnAddToPlaylist { get; set; }
}
