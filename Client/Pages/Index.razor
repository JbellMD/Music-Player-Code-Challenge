@page "/"
@using music_manager_starter.Shared
@inject ISongService SongService
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject IThemeService ThemeService

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <div class="page-container">
                <div class="d-flex align-center gap-4">
                    <MudText Typo="Typo.h5" Color="Color.Primary">Songs</MudText>
                    <MudTextField 
                        @bind-Value="searchTerm" 
                        Placeholder="Search songs..." 
                        Adornment="Adornment.Start" 
                        AdornmentIcon="@Icons.Material.Filled.Search"
                        Class="flex-grow-1"
                        Variant="Variant.Outlined" />
                    <MudButton 
                        Variant="Variant.Filled" 
                        Color="Color.Primary"
                        StartIcon="@Icons.Material.Filled.Add"
                        OnClick="AddNewSong">
                        ADD SONG
                    </MudButton>
                </div>

                <div class="position-relative min-height-500 mt-4">
                    @if (isLoading)
                    {
                        <div class="d-flex justify-center align-center min-height-500">
                            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                        </div>
                    }
                    else if (songs == null || !songs.Any())
                    {
                        <MudPaper Class="pa-8 rounded-lg">
                            <div class="d-flex flex-column align-center text-center max-width-sm mx-auto">
                                <div class="position-relative mb-6" style="width: 80px; height: 80px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Album" 
                                            Class="music-icon-large" 
                                            Color="Color.Primary" />
                                    <MudIcon Icon="@Icons.Material.Filled.MusicNote" 
                                            Class="music-note-1 position-absolute" 
                                            Color="Color.Secondary" />
                                    <MudIcon Icon="@Icons.Material.Filled.MusicNote" 
                                            Class="music-note-2 position-absolute" 
                                            Color="Color.Secondary" />
                                    <MudIcon Icon="@Icons.Material.Filled.MusicNote" 
                                            Class="music-note-3 position-absolute" 
                                            Color="Color.Secondary" />
                                </div>

                                <MudText Typo="Typo.h4" Class="mb-4">Your Music Library is Empty</MudText>
                                <MudText Color="Color.Secondary" Class="mb-6">
                                    Start building your music collection! Add your favorite songs and create custom playlists.
                                </MudText>

                                <div class="d-flex gap-3 mb-8">
                                    <MudButton 
                                        Variant="Variant.Filled" 
                                        Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Add"
                                        OnClick="AddNewSong">
                                        ADD YOUR FIRST SONG
                                    </MudButton>
                                    <MudButton 
                                        Variant="Variant.Outlined" 
                                        Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.PlaylistAdd">
                                        CREATE PLAYLIST
                                    </MudButton>
                                </div>

                                <MudText Typo="Typo.h6" Class="mb-4">Quick Tips</MudText>
                                <div class="d-flex gap-4 justify-center flex-wrap">
                                    <MudCard Elevation="0" Class="quick-tip-card">
                                        <MudCardContent>
                                            <MudIcon Icon="@Icons.Material.Filled.CloudUpload" 
                                                    Color="Color.Primary" 
                                                    Size="Size.Large"
                                                    Class="mb-2" />
                                            <MudText Typo="Typo.subtitle1" Class="font-weight-bold mb-2">Upload Songs</MudText>
                                            <MudText Typo="Typo.body2" Color="Color.Secondary">
                                                Add your favorite music to start building your collection
                                            </MudText>
                                        </MudCardContent>
                                    </MudCard>

                                    <MudCard Elevation="0" Class="quick-tip-card">
                                        <MudCardContent>
                                            <MudIcon Icon="@Icons.Material.Filled.PlaylistAdd" 
                                                    Color="Color.Primary" 
                                                    Size="Size.Large"
                                                    Class="mb-2" />
                                            <MudText Typo="Typo.subtitle1" Class="font-weight-bold mb-2">Create Playlists</MudText>
                                            <MudText Typo="Typo.body2" Color="Color.Secondary">
                                                Organize your music into custom playlists
                                            </MudText>
                                        </MudCardContent>
                                    </MudCard>

                                    <MudCard Elevation="0" Class="quick-tip-card">
                                        <MudCardContent>
                                            <MudIcon Icon="@Icons.Material.Filled.Favorite" 
                                                    Color="Color.Primary" 
                                                    Size="Size.Large"
                                                    Class="mb-2" />
                                            <MudText Typo="Typo.subtitle1" Class="font-weight-bold mb-2">Mark Favorites</MudText>
                                            <MudText Typo="Typo.body2" Color="Color.Secondary">
                                                Save your most loved tracks for quick access
                                            </MudText>
                                        </MudCardContent>
                                    </MudCard>
                                </div>
                            </div>
                        </MudPaper>
                    }
                    else
                    {
                        <MudPaper Elevation="0" Class="pa-4 rounded-lg">
                            <MudList Clickable="true" Class="pa-0">
                                <MudListSubheader Class="px-4 d-flex gap-4 align-center">
                                    <MudIcon Icon="@Icons.Material.Filled.AudioFile" Color="Color.Primary" />
                                    <div class="flex-grow-1">Title / Artist</div>
                                    <div style="width: 150px;">Album</div>
                                    <div style="width: 100px;">Genre</div>
                                    <div style="width: 100px;"></div>
                                </MudListSubheader>
                                
                                @foreach (var song in songs)
                                {
                                    <MudListItem>
                                        <div class="d-flex gap-4 align-center py-2">
                                            <MudAvatar Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small">
                                                <MudIcon Icon="@Icons.Material.Filled.MusicNote" Size="Size.Small" />
                                            </MudAvatar>
                                            
                                            <div class="flex-grow-1 min-width-0">
                                                <MudText Typo="Typo.body1" Class="font-weight-bold text-truncate">@song.Title</MudText>
                                                <MudText Typo="Typo.caption" Color="Color.Secondary" Class="text-truncate">@song.Artist</MudText>
                                            </div>
                                            
                                            <div style="width: 150px;" class="d-none d-sm-block">
                                                <MudText Typo="Typo.body2" Class="text-truncate">@song.Album</MudText>
                                            </div>
                                            
                                            <div style="width: 100px;" class="d-none d-md-block">
                                                <MudChip Size="Size.Small" 
                                                        Color="Color.Primary" 
                                                        Variant="Variant.Text"
                                                        Label="true">@song.Genre</MudChip>
                                            </div>
                                            
                                            <div style="width: 100px;" class="d-flex gap-2 justify-end">
                                                <MudIconButton Icon="@Icons.Material.Filled.PlaylistAdd"
                                                             Size="Size.Small"
                                                             Color="Color.Primary"
                                                             Variant="Variant.Text" />
                                                <MudMenu Icon="@Icons.Material.Filled.MoreVert" 
                                                        Dense="true" 
                                                        AnchorOrigin="Origin.BottomRight"
                                                        TransformOrigin="Origin.TopRight">
                                                    <MudMenuItem OnClick="@(() => EditSong(song))">
                                                        <div class="d-flex gap-2 align-center">
                                                            <MudIcon Icon="@Icons.Material.Filled.Edit" Size="Size.Small" />
                                                            Edit
                                                        </div>
                                                    </MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => DeleteSong(song.Id))" Class="text-error">
                                                        <div class="d-flex gap-2 align-center">
                                                            <MudIcon Icon="@Icons.Material.Filled.Delete" Size="Size.Small" />
                                                            Delete
                                                        </div>
                                                    </MudMenuItem>
                                                </MudMenu>
                                            </div>
                                        </div>
                                    </MudListItem>
                                }
                            </MudList>
                        </MudPaper>
                    }
                </div>
            </div>
        </MudItem>
    </MudGrid>
</MudContainer>

<style>
    .page-container {
        padding: 1.5rem;
    }

    .quick-tip-card {
        width: 200px;
    }

    ::deep .music-icon-large {
        font-size: 64px;
    }
    
    ::deep .music-note-1 {
        animation: float1 3s ease-in-out infinite;
        position: absolute;
        right: -20px;
        top: -10px;
    }
    
    ::deep .music-note-2 {
        animation: float2 2.5s ease-in-out infinite;
        position: absolute;
        left: -15px;
        top: 10px;
    }
    
    ::deep .music-note-3 {
        animation: float3 2s ease-in-out infinite;
        position: absolute;
        right: -10px;
        bottom: -5px;
    }
    
    ::deep @@keyframes float1 {
        0% { transform: translateY(0px); opacity: 0.5; }
        50% { transform: translateY(-10px); opacity: 1; }
        100% { transform: translateY(0px); opacity: 0.5; }
    }
    
    ::deep @@keyframes float2 {
        0% { transform: translateY(0px); opacity: 0.5; }
        50% { transform: translateY(-8px); opacity: 1; }
        100% { transform: translateY(0px); opacity: 0.5; }
    }
    
    ::deep @@keyframes float3 {
        0% { transform: translateY(0px); opacity: 0.5; }
        50% { transform: translateY(-6px); opacity: 1; }
        100% { transform: translateY(0px); opacity: 0.5; }
    }
    
    ::deep .max-width-sm {
        max-width: 500px;
    }

    ::deep .min-height-500 {
        min-height: 500px;
    }
</style>

@code {
    private IEnumerable<Song>? songs;
    private string searchTerm = "";
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        await LoadSongs();
    }

    private async Task LoadSongs()
    {
        isLoading = true;
        try
        {
            songs = await SongService.GetSongsAsync();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading songs: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task AddNewSong()
    {
        var parameters = new DialogParameters { ["Song"] = new Song() };
        var dialog = await DialogService.ShowAsync<SongEditDialog>("Add Song", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await LoadSongs();
        }
    }

    private async Task EditSong(Song song)
    {
        var parameters = new DialogParameters { ["Song"] = song };
        var dialog = await DialogService.ShowAsync<SongEditDialog>("Edit Song", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await LoadSongs();
        }
    }

    private async Task DeleteSong(int id)
    {
        var parameters = new DialogParameters
        {
            ["ContentText"] = "Are you sure you want to delete this song?",
            ["ButtonText"] = "Delete",
            ["Color"] = Color.Error
        };

        var dialog = await DialogService.ShowAsync<ConfirmDialog>("Delete Song", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            try
            {
                await SongService.DeleteSongAsync(id);
                await LoadSongs();
                Snackbar.Add("Song deleted successfully", Severity.Success);
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Error deleting song: {ex.Message}", Severity.Error);
            }
        }
    }
}